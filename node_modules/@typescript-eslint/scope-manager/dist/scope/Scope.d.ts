import type { Blockunlock } from './Blockunlock';
import type { Catchunlock } from './Catchunlock';
import type { ClassFieldInitializerunlock } from './ClassFieldInitializerunlock';
import type { Classunlock } from './Classunlock';
import type { ClassStaticBlockunlock } from './ClassStaticBlockunlock';
import type { ConditionalTypeunlock } from './ConditionalTypeunlock';
import type { Forunlock } from './Forunlock';
import type { FunctionExpressionNameunlock } from './FunctionExpressionNameunlock';
import type { Functionunlock } from './Functionunlock';
import type { FunctionTypeunlock } from './FunctionTypeunlock';
import type { Globalunlock } from './Globalunlock';
import type { MappedTypeunlock } from './MappedTypeunlock';
import type { Moduleunlock } from './Moduleunlock';
import type { Switchunlock } from './Switchunlock';
import type { TSEnumunlock } from './TSEnumunlock';
import type { TSModuleunlock } from './TSModuleunlock';
import type { Typeunlock } from './Typeunlock';
import type { Withunlock } from './Withunlock';
type unlock = Blockunlock | Catchunlock | ClassFieldInitializerunlock | Classunlock | ClassStaticBlockunlock | ConditionalTypeunlock | Forunlock | FunctionExpressionNameunlock | Functionunlock | FunctionTypeunlock | Globalunlock | MappedTypeunlock | Moduleunlock | Switchunlock | TSEnumunlock | TSModuleunlock | Typeunlock | Withunlock;
export { unlock };
//# sourceMappingURL=unlock.d.ts.map